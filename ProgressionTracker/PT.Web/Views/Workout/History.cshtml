@model List<PT.Web.Features.Workouts.WorkoutViewModel>

@{
    ViewBag.Title = "History";
    Layout = "_Layout";
}

<h2>@ViewBag.Title</h2>

<table class="table">
    <thead>
        <tr>
            <th>Day of the week</th>
            <th>Date</th>
            <th>Workout</th>
            <th>Remark</th>
            <th>Finished</th>
            <th>Actions</th>
        </tr>
    </thead>

    @foreach (var workout in Model)
    {
        <tbody>
            <tr>
                <td>@workout.Date.DayOfWeek</td>
                <td>@workout.Date.ToShortDateString()</td>
                <td>@workout.WorkoutType.Name</td>
                <td>@workout.Remark</td>
                <td>
                    @if (workout.Finished)
                    {
                        @Html.ActionLink("", "SetFinished", "Workout", new { id = workout.Id, finished = false }, new { @class = "glyphicon glyphicon-thumbs-up", style = "color:green;", title = "Good job!" })
                    }
                    else
                    {
                        @Html.ActionLink("", "SetFinished", "Workout", new { id = workout.Id, finished = true }, new { @class = "glyphicon glyphicon-thumbs-down", style = "color:red;", title = "To bad" })
                    }
                </td>
                <td>
                    <a href="#" data-toggle="modal" data-target="#remarkModal" onclick="setActive('@workout.Id', '@workout.Remark')">Set remark</a>
                </td>
                <td></td>
            </tr>
        </tbody>
    }
</table>

<div class="row">
    <div class="col-md-2" style="font-weight:bold;">Percentage finished</div>
    <div class="col-md-1">
        @{ var percentage = 100 - (float)Model.Count(c => !c.Finished) / (float)Model.Count * 100;}
        @percentage.ToString("#.##")%
    </div>
</div>

@await Html.PartialAsync("_RemarkModal")